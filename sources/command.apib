# Group Command Scheduler
Command Scheduler de **Mirmidon-unstable API**

## Command List [/command/list]

Get the list of commands submitted and their info

### GET

+ Response 200

    + Headers

            Content-Type : application/json

    + Body

            {
                "code": 0,
                "message": null,
                "data": {
                    "commands": {
                        "1": {
                            "commandId": 1,
                            "commandName": "Command-test",
                            "configurationName": "test",
                            "commandCreationDate": "26 Nov 2014 10:42:55 GMT",
                            "commandLaunchDate": "26 Nov 2014 10:43:03 GMT",
                            "commandEndDate": "26 Nov 2014 10:43:23 GMT",
                            "model": {
                                "id": 5,
                                "name": "Simple testor model",
                                "description": "Do nothing but use ww3 output to test the preview feature...",
                                "processName": "moveoutput.sh",
                                "outputPhenomena": {
                                    "0": {
                                        "name": "hs",
                                        "phenomenon_standardName": "hs"
                                    }
                                }
                            },
                            "isParallelJob": false,
                            "userPriority": 50,
                            "maxRunDuration": 173200,
                            "fullContractJson": {
                                "0": {
                                    "step": "Pre-execution routines",
                                    "article": {
                                        "code": "Valid"
                                    }
                                },
                                "1": {
                                    "step": "Check submission ready",
                                    "article": {
                                        "code": "Valid"
                                    }
                                },
                                "2": {
                                    "step": "Workload submission",
                                    "article": {
                                        "code": "Valid"
                                    }
                                },
                                "3": {
                                    "step": "Post-execution routines",
                                    "article": {
                                        "code": "Not Valid",
                                        "info": " (Wed Nov 26 11:43:23 CET 2014): models.util.io.IOOperationException: java.io. IOException: Cannot run program \"ncks\" (in directory \"/home/water/mirmidon/MIRMIDON_FS/   configs/1\"): error=2, Aucun fichier ou dossier de ce type\ \  at models.util.io.IOOperation.  run(IOOperation.java:108)\ \  at models.util.io.IOOperation.run(IOOperation.java:87)\ \   at  models.m_command_scheduler.MCommand.postprocessing(MCommand.java:385)\ \ at models.  m_command_scheduler.MCommand.run(MCommand.java:537)\ \    at java.lang.Thread.run(Thread. java:744)\ Caused by: java.io.IOException: Cannot run program \"ncks\" (in directory \"/home/    water/mirmidon/MIRMIDON_FS/configs/1\"): error=2, Aucun fichier ou dossier de ce type\ \        at java.lang.ProcessBuilder.start(ProcessBuilder.java:1041)\ \  at java.lang.Runtime.exec(  Runtime.java:617)\ \  at java.lang.Runtime.exec(Runtime.java:450)\ \  at models.util.io.  ShellCommand.run(ShellCommand.java:186)\ \    at models.util.io.IOOperation.run(IOOperation.  java:106)\ \  ... 4 more\ Caused by: java.io.IOException: error=2, Aucun fichier ou dossier   de ce type\ \ at java.lang.UNIXProcess.forkAndExec(Native Method)\ \  at java.lang.   UNIXProcess.<init>(UNIXProcess.java:135)\ \    at java.lang.ProcessImpl.start(ProcessImpl. java:130)\ \ at java.lang.ProcessBuilder.start(ProcessBuilder.java:1022)\ \  ... 8 more\ "
                                    }
                                },
                                "4": {
                                    "step": "Preview-processing",
                                    "article": {
                                        "code": "Not set"
                                    }
                                }
                            },
                            "isRunning": false,
                            "isStarted": true,
                            "isValid": false,
                            "isFinished": true,
                            "job": "42",
                            "jobStatus": "DONE",
                            "totalTasks": "1",
                            "tasksPerNode": "1",
                            "fieldsite": 1,
                            "configId": 1
                        }
                    }
                }
            }

### POST

+ Request (application/json)

            {
                "token":"20eebea3-ed83-4495-a3a0-5110c8695ae3",
                "target":"http:\/\/192.168.1.61:9082\/",
                "fieldsite_id":1,
                "data":""
            }

+ Response 200

    + Headers

            Content-Type : application/json

    + Body

            {
                "code": 0,
                "message": null,
                "data": {
                    "commands": {
                        "1": {
                            "commandId": 1,
                            "commandName": "Command-test",
                            "configurationName": "test",
                            "commandCreationDate": "26 Nov 2014 10:42:55 GMT",
                            "commandLaunchDate": "26 Nov 2014 10:43:03 GMT",
                            "commandEndDate": "26 Nov 2014 10:43:23 GMT",
                            "model": {
                                "id": 5,
                                "name": "Simple testor model",
                                "description": "Do nothing but use ww3 output to test the preview feature...",
                                "processName": "moveoutput.sh",
                                "outputPhenomena": {
                                    "0": {
                                        "name": "hs",
                                        "phenomenon_standardName": "hs"
                                    }
                                }
                            },
                            "isParallelJob": false,
                            "userPriority": 50,
                            "maxRunDuration": 173200,
                            "fullContractJson": {
                                "0": {
                                    "step": "Pre-execution routines",
                                    "article": {
                                        "code": "Valid"
                                    }
                                },
                                "1": {
                                    "step": "Check submission ready",
                                    "article": {
                                        "code": "Valid"
                                    }
                                },
                                "2": {
                                    "step": "Workload submission",
                                    "article": {
                                        "code": "Valid"
                                    }
                                },
                                "3": {
                                    "step": "Post-execution routines",
                                    "article": {
                                        "code": "Not Valid",
                                        "info": " (Wed Nov 26 11:43:23 CET 2014): models.util.io.IOOperationException: java.io. IOException: Cannot run program \"ncks\" (in directory \"/home/water/mirmidon/MIRMIDON_FS/   configs/1\"): error=2, Aucun fichier ou dossier de ce type\ \  at models.util.io.IOOperation.  run(IOOperation.java:108)\ \  at models.util.io.IOOperation.run(IOOperation.java:87)\ \   at  models.m_command_scheduler.MCommand.postprocessing(MCommand.java:385)\ \ at models.  m_command_scheduler.MCommand.run(MCommand.java:537)\ \    at java.lang.Thread.run(Thread. java:744)\ Caused by: java.io.IOException: Cannot run program \"ncks\" (in directory \"/home/    water/mirmidon/MIRMIDON_FS/configs/1\"): error=2, Aucun fichier ou dossier de ce type\ \        at java.lang.ProcessBuilder.start(ProcessBuilder.java:1041)\ \  at java.lang.Runtime.exec(  Runtime.java:617)\ \  at java.lang.Runtime.exec(Runtime.java:450)\ \  at models.util.io.  ShellCommand.run(ShellCommand.java:186)\ \    at models.util.io.IOOperation.run(IOOperation.  java:106)\ \  ... 4 more\ Caused by: java.io.IOException: error=2, Aucun fichier ou dossier   de ce type\ \ at java.lang.UNIXProcess.forkAndExec(Native Method)\ \  at java.lang.   UNIXProcess.<init>(UNIXProcess.java:135)\ \    at java.lang.ProcessImpl.start(ProcessImpl. java:130)\ \ at java.lang.ProcessBuilder.start(ProcessBuilder.java:1022)\ \  ... 8 more\ "
                                    }
                                },
                                "4": {
                                    "step": "Preview-processing",
                                    "article": {
                                        "code": "Not set"
                                    }
                                }
                            },
                            "isRunning": false,
                            "isStarted": true,
                            "isValid": false,
                            "isFinished": true,
                            "job": "42",
                            "jobStatus": "DONE",
                            "totalTasks": "1",
                            "tasksPerNode": "1",
                            "fieldsite": 1,
                            "configId": 1
                        }
                    }
                }
            }

## Command info [/command/info]

Get a command and its info

### POST

@param int commandId

+ Request (application/json)

            {
                "token":"20eebea3-ed83-4495-a3a0-5110c8695ae3",
                "target":"http:\/\/192.168.1.61:9082\/",
                "fieldsite_id": 1,
                "data": {
                    "commandId": 1
                }
            }

+ Response 200

    + Headers

            Content-Type : application/json

    + Body

            {
                "code": 0,
                "message": null,
                "data": {
                "commandId": 2,
                "commandName": "Command-Test 2",
                "configurationName": "Test 2",
                "commandCreationDate": "26 Nov 2014 11:16:26 GMT",
                "commandLaunchDate": "26 Nov 2014 11:16:34 GMT",
                "commandEndDate": "26 Nov 2014 11:16:54 GMT",
                "model": {
                    "id": 5,
                    "name": "Simple testor model",
                    "description": "Do nothing but use ww3 output to test the preview feature...",
                    "processName": "moveoutput.sh",
                    "outputPhenomena": {
                        "0": {
                            "name": "hs",
                            "phenomenon_standardName": "hs"
                        }
                    }
                },
                "isParallelJob": false,
                "userPriority": 50,
                "maxRunDuration": 173200,
                "fullContractJson": {
                    "0": {
                        "step": "Pre-execution routines",
                        "article": {
                            "code": "Valid"
                        }
                    },
                    "1": {
                        "step": "Check submission ready",
                        "article": {
                            "code": "Valid"
                        }
                    },
                    "2": {
                        "step": "Workload submission",
                        "article": {
                            "code": "Valid"
                        }
                    },
                    "3": {
                        "step": "Post-execution routines",
                        "article": {
                            "code": "Not Valid",
                            "info": " (Wed Nov 26 12:16:54 CET 2014): models.util.io.IOOperationException: java.io.IOException: Cannot run program \"ncks\" (in directory \"/home/water/mirmidon/MIRMIDON_FS/configs/2\"): error=2, Aucun fichier ou dossier de ce type\ \  at models.util.io.IOOperation.run(IOOperation.java:108)\ \  at models.util.io.IOOperation.run(IOOperation.java:87)\ \   at models.m_command_scheduler.MCommand.postprocessing(MCommand.java:385)\ \ at models.m_command_scheduler.MCommand.run(MCommand.java:537)\ \    at java.lang.Thread.run(Thread.java:744)\ Caused by: java.io.IOException: Cannot run program \"ncks\" (in directory \"/home/water/mirmidon/MIRMIDON_FS/configs/2\"): error=2, Aucun fichier ou dossier de ce type\ \    at java.lang.ProcessBuilder.start(ProcessBuilder.java:1041)\ \  at java.lang.Runtime.exec(Runtime.java:617)\ \  at java.lang.Runtime.exec(Runtime.java:450)\ \  at models.util.io.ShellCommand.run(ShellCommand.java:186)\ \    at models.util.io.IOOperation.run(IOOperation.java:106)\ \  ... 4 more\ Caused by: java.io.IOException: error=2, Aucun fichier ou dossier de ce type\ \ at java.lang.UNIXProcess.forkAndExec(Native Method)\ \  at java.lang.UNIXProcess.<init>(UNIXProcess.java:135)\ \    at java.lang.ProcessImpl.start(ProcessImpl.java:130)\ \ at java.lang.ProcessBuilder.start(ProcessBuilder.java:1022)\ \  ... 8 more\ "
                        }
                    },
                    "4": {
                        "step": "Preview-processing",
                        "article": {
                            "code": "Not set"
                        }
                    }
                },
                "isRunning": false,
                "isStarted": true,
                "isValid": false,
                "isFinished": true,
                "job": "43",
                "jobStatus": "DONE",
                "totalTasks": "1",
                "tasksPerNode": "1",
                "fieldsite": 1,
                "configId": 2
            }

## Command Start [/command/start]

Submit a new command from a json array

### POST

@param string commandId // TODO: should be an integer

+ Request (application/json)

            {
                "token":"3eb15f8c-1440-44c7-b8e7-d031428cb752",
                "target":"http:\/\/p4x-650.gateworld.fr:9082\/command\/start",
                "fieldsite_id":1,
                "data":{
                    "commandId": "1"
                }
            }

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {
                "code": 0,
                "message": "The command #1 has been launched!",
                "data": null
            }

## Command Create [/command/create]

Create a new command from configuration ID

### POST

@param string configurationId // TODO: should be an integer

+ Request (application/json)

            {
                "token":"3eb15f8c-1440-44c7-b8e7-d031428cb752",
                "target":"http:\/\/p4x-650.gateworld.fr:9082\/command\/create",
                "fieldsite_id":1,
                "data": {
                    "configurationId": "1" // TODO: Devrait être un integer
                }
            }

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {
                "code": 0,
                "message": "", // TODO: Devrait afficher un message de succès
                "data": null
            }

## Command Stop [/command/stop]

Stop a command from a json array

### POST

@param string commandId // TODO: should be an integer

+ Request (application/json)

            {
                "token":"20eebea3-ed83-4495-a3a0-5110c8695ae3",
                "target":"http:\/\/p4x-650.gateworld.fr:9082\/command\/stop",
                "fieldsite_id":1,
                "data": {
                    "commandId": 1
                }
            }

+ Response 200

    + Headers

            Content-Type : application/json

    + Body

            {
                "code":0,
                "message":"The command #1 has been stopped! / cannot be stopped anymore!",
                "data":null
            }

## Command Latest [/command/latest]

Get Five latest commands inserted in Mirmidon database

### POST

+ Request (application/json)

            {
                "token":"20eebea3-ed83-4495-a3a0-5110c8695ae3",
                "target":"http:\/\/192.168.1.61:9082\/",
                "fieldsite_id":1,
                "data":"0"
            }

+ Response 200

    + Headers

             Content-Type: application/json

    + Body

            {
                "code": 0,
                "message": null,
                "data": {
                    "commands": {
                        "1": {
                            "commandId": 1,
                            "commandName": "Command-test",
                            "configurationName": "test",
                            "commandCreationDate": "26 Nov 2014 10:42:55 GMT",
                            "commandLaunchDate": "26 Nov 2014 10:43:03 GMT",
                            "commandEndDate": "26 Nov 2014 10:43:23 GMT",
                            "model": {
                                "id": 5,
                                "name": "Simple testor model",
                                "description": "Do nothing but use ww3 output to test the preview feature...",
                                "processName": "moveoutput.sh",
                                "outputPhenomena": {
                                    "0": {
                                        "name": "hs",
                                        "phenomenon_standardName": "hs"
                                    }
                                }
                            },
                            "isParallelJob": false,
                            "userPriority": 50,
                            "maxRunDuration": 173200,
                            "fullContractJson": {
                                "0": {
                                    "step": "Pre-execution routines",
                                    "article": {
                                        "code": "Valid"
                                    }
                                },
                                "1": {
                                    "step": "Check submission ready",
                                    "article": {
                                        "code": "Valid"
                                    }
                                },
                                "2": {
                                    "step": "Workload submission",
                                    "article": {
                                        "code": "Valid"
                                    }
                                },
                                "3": {
                                    "step": "Post-execution routines",
                                    "article": {
                                        "code": "Not Valid",
                                        "info": " (Wed Nov 26 11:43:23 CET 2014): models.util.io.IOOperationException: java.io. IOException: Cannot run program \"ncks\" (in directory \"/home/water/mirmidon/MIRMIDON_FS/   configs/1\"): error=2, Aucun fichier ou dossier de ce type\ \  at models.util.io.IOOperation.  run(IOOperation.java:108)\ \  at models.util.io.IOOperation.run(IOOperation.java:87)\ \   at  models.m_command_scheduler.MCommand.postprocessing(MCommand.java:385)\ \ at models.  m_command_scheduler.MCommand.run(MCommand.java:537)\ \    at java.lang.Thread.run(Thread. java:744)\ Caused by: java.io.IOException: Cannot run program \"ncks\" (in directory \"/home/    water/mirmidon/MIRMIDON_FS/configs/1\"): error=2, Aucun fichier ou dossier de ce type\ \        at java.lang.ProcessBuilder.start(ProcessBuilder.java:1041)\ \  at java.lang.Runtime.exec(  Runtime.java:617)\ \  at java.lang.Runtime.exec(Runtime.java:450)\ \  at models.util.io.  ShellCommand.run(ShellCommand.java:186)\ \    at models.util.io.IOOperation.run(IOOperation.  java:106)\ \  ... 4 more\ Caused by: java.io.IOException: error=2, Aucun fichier ou dossier   de ce type\ \ at java.lang.UNIXProcess.forkAndExec(Native Method)\ \  at java.lang.   UNIXProcess.<init>(UNIXProcess.java:135)\ \    at java.lang.ProcessImpl.start(ProcessImpl. java:130)\ \ at java.lang.ProcessBuilder.start(ProcessBuilder.java:1022)\ \  ... 8 more\ "
                                    }
                                },
                                "4": {
                                    "step": "Preview-processing",
                                    "article": {
                                        "code": "Not set"
                                    }
                                }
                            },
                            "isRunning": false,
                            "isStarted": true,
                            "isValid": false,
                            "isFinished": true,
                            "job": "42",
                            "jobStatus": "DONE",
                            "totalTasks": "1",
                            "tasksPerNode": "1",
                            "fieldsite": 1,
                            "configId": 1
                        }
                    }
                }
            }

## Command IsValid [/command/isvalid]

Whether the defined command is valid or not

### POST

@param int commandId

+ Request (application/json)

           {
                "token":"20eebea3-ed83-4495-a3a0-5110c8695ae3",
                "target":"http:\/\/192.168.1.61:9082\/",
                "fieldsite_id":1,
                "data": {
                    "commandId": 1
                }
          }

+ Response 200

    + Headers

            Content-Type : application/json

    + Body

            {
                "code": 0,
                "message": null,
                "data": {
                    "isValid": true/false
                }
            }

## Command Delete  [/command/delete]

Delete the specified command

### POST

@param int commandId

+ Request (application/json)

            {
                "token":"20eebea3-ed83-4495-a3a0-5110c8695ae3",
                "target":"http:\/\/192.168.1.61:9082\/",
                "fieldsite_id":1,
                "data": {
                    "commandId": 1
                }
            }

+ Response 200

    + Headers

            Content-Type : application/json

    + Body

            {
                "code": 0,
                "message": null,
                "data": null
            }
